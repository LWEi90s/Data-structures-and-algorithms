1.
//二叉树的前序遍历递归算法
void PreOrderTraverse(BiTree T){
    if(T==NULL){
        return;
    }
    printf("%c",T.data);//显示节点数据，可以更改为其他对结点的操作
    PreOrderTraverse(T.lchild);//再先序遍历左子树
    PreOrderTraverse(T.rchild);//最后先序遍历右子序
    
}

2.
//二叉树的中序遍历递归算法
void InOrderTraverse(BiTree T){
    if(T==NULL){
        return;
    }
    InOrderTraverse(T.lchild);//中序遍历左子树
    printf("%c",T.data);//显示节点数据，可以更改为其他对结点的操作
   
    InOrderTraverse(T.rchild);//最后中序遍历右子序
    
}

3.
//二叉树的后序遍历递归算法
void InOrderTraverse(BiTree T){
    if(T==NULL){
        return;
    }
    InOrderTraverse(T.lchild);//中序遍历左子树
    InOrderTraverse(T.rchild);//最后中序遍历右子序
    printf("%c",T.data);//显示节点数据，可以更改为其他对结点的操作
}